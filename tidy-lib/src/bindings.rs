/* automatically generated by rust-bindgen 0.55.1 */

pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type size_t = ::std::os::raw::c_ulong;
pub type FILE = _IO_FILE;
pub type va_list = __builtin_va_list;
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    pub _next: *mut _IO_marker,
    pub _sbuf: *mut _IO_FILE,
    pub _pos: ::std::os::raw::c_int,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_schar,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub __pad1: *mut ::std::os::raw::c_void,
    pub __pad2: *mut ::std::os::raw::c_void,
    pub __pad3: *mut ::std::os::raw::c_void,
    pub __pad4: *mut ::std::os::raw::c_void,
    pub __pad5: size_t,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
pub type ulong = ::std::os::raw::c_ulong;
pub type uint = ::std::os::raw::c_uint;
pub type byte = ::std::os::raw::c_uchar;
pub type tmbchar = ::std::os::raw::c_char;
pub type tmbstr = *mut tmbchar;
pub type ctmbstr = *const tmbchar;
pub const Bool_no: Bool = 0;
pub const Bool_yes: Bool = 1;
pub type Bool = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyIterator {
    pub _opaque: ::std::os::raw::c_int,
}
pub type TidyIterator = *const _TidyIterator;
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyConfigCategory {
    TidyMarkup = 0,
    TidyDiagnostics = 1,
    TidyPrettyPrint = 2,
    TidyEncoding = 3,
    TidyMiscellaneous = 4,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyOptionId {
    TidyUnknownOption = 0,
    TidyIndentSpaces = 1,
    TidyWrapLen = 2,
    TidyTabSize = 3,
    TidyCharEncoding = 4,
    TidyInCharEncoding = 5,
    TidyOutCharEncoding = 6,
    TidyNewline = 7,
    TidyDoctypeMode = 8,
    TidyDoctype = 9,
    TidyDuplicateAttrs = 10,
    TidyAltText = 11,
    TidySlideStyle = 12,
    TidyErrFile = 13,
    TidyOutFile = 14,
    TidyWriteBack = 15,
    TidyShowMarkup = 16,
    TidyShowInfo = 17,
    TidyShowWarnings = 18,
    TidyQuiet = 19,
    TidyIndentContent = 20,
    TidyCoerceEndTags = 21,
    TidyOmitOptionalTags = 22,
    TidyHideEndTags = 23,
    TidyXmlTags = 24,
    TidyXmlOut = 25,
    TidyXhtmlOut = 26,
    TidyHtmlOut = 27,
    TidyXmlDecl = 28,
    TidyUpperCaseTags = 29,
    TidyUpperCaseAttrs = 30,
    TidyMakeBare = 31,
    TidyMakeClean = 32,
    TidyGDocClean = 33,
    TidyLogicalEmphasis = 34,
    TidyDropPropAttrs = 35,
    TidyDropFontTags = 36,
    TidyDropEmptyElems = 37,
    TidyDropEmptyParas = 38,
    TidyFixComments = 39,
    TidyBreakBeforeBR = 40,
    TidyBurstSlides = 41,
    TidyNumEntities = 42,
    TidyQuoteMarks = 43,
    TidyQuoteNbsp = 44,
    TidyQuoteAmpersand = 45,
    TidyWrapAttVals = 46,
    TidyWrapScriptlets = 47,
    TidyWrapSection = 48,
    TidyWrapAsp = 49,
    TidyWrapJste = 50,
    TidyWrapPhp = 51,
    TidyFixBackslash = 52,
    TidyIndentAttributes = 53,
    TidyXmlPIs = 54,
    TidyXmlSpace = 55,
    TidyEncloseBodyText = 56,
    TidyEncloseBlockText = 57,
    TidyKeepFileTimes = 58,
    TidyWord2000 = 59,
    TidyMark = 60,
    TidyEmacs = 61,
    TidyEmacsFile = 62,
    TidyLiteralAttribs = 63,
    TidyBodyOnly = 64,
    TidyFixUri = 65,
    TidyLowerLiterals = 66,
    TidyHideComments = 67,
    TidyIndentCdata = 68,
    TidyForceOutput = 69,
    TidyShowErrors = 70,
    TidyAsciiChars = 71,
    TidyJoinClasses = 72,
    TidyJoinStyles = 73,
    TidyEscapeCdata = 74,
    TidyLanguage = 75,
    TidyNCR = 76,
    TidyOutputBOM = 77,
    TidyReplaceColor = 78,
    TidyCSSPrefix = 79,
    TidyInlineTags = 80,
    TidyBlockTags = 81,
    TidyEmptyTags = 82,
    TidyPreTags = 83,
    TidyAccessibilityCheckLevel = 84,
    TidyVertSpace = 85,
    TidyPunctWrap = 86,
    TidyMergeEmphasis = 87,
    TidyMergeDivs = 88,
    TidyDecorateInferredUL = 89,
    TidyPreserveEntities = 90,
    TidySortAttributes = 91,
    TidyMergeSpans = 92,
    TidyAnchorAsName = 93,
    TidyPPrintTabs = 94,
    TidySkipNested = 95,
    TidyStrictTagsAttr = 96,
    TidyEscapeScripts = 97,
    N_TIDY_OPTIONS = 98,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyOptionType {
    TidyString = 0,
    TidyInteger = 1,
    TidyBoolean = 2,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyReportLevel {
    TidyInfo = 0,
    TidyWarning = 1,
    TidyConfig = 2,
    TidyAccess = 3,
    TidyError = 4,
    TidyBadDocument = 5,
    TidyFatal = 6,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyNodeType {
    TidyNode_Root = 0,
    TidyNode_DocType = 1,
    TidyNode_Comment = 2,
    TidyNode_ProcIns = 3,
    TidyNode_Text = 4,
    TidyNode_Start = 5,
    TidyNode_End = 6,
    TidyNode_StartEnd = 7,
    TidyNode_CDATA = 8,
    TidyNode_Section = 9,
    TidyNode_Asp = 10,
    TidyNode_Jste = 11,
    TidyNode_Php = 12,
    TidyNode_XmlDecl = 13,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyTagId {
    TidyTag_UNKNOWN = 0,
    TidyTag_A = 1,
    TidyTag_ABBR = 2,
    TidyTag_ACRONYM = 3,
    TidyTag_ADDRESS = 4,
    TidyTag_ALIGN = 5,
    TidyTag_APPLET = 6,
    TidyTag_AREA = 7,
    TidyTag_B = 8,
    TidyTag_BASE = 9,
    TidyTag_BASEFONT = 10,
    TidyTag_BDO = 11,
    TidyTag_BGSOUND = 12,
    TidyTag_BIG = 13,
    TidyTag_BLINK = 14,
    TidyTag_BLOCKQUOTE = 15,
    TidyTag_BODY = 16,
    TidyTag_BR = 17,
    TidyTag_BUTTON = 18,
    TidyTag_CAPTION = 19,
    TidyTag_CENTER = 20,
    TidyTag_CITE = 21,
    TidyTag_CODE = 22,
    TidyTag_COL = 23,
    TidyTag_COLGROUP = 24,
    TidyTag_COMMENT = 25,
    TidyTag_DD = 26,
    TidyTag_DEL = 27,
    TidyTag_DFN = 28,
    TidyTag_DIR = 29,
    TidyTag_DIV = 30,
    TidyTag_DL = 31,
    TidyTag_DT = 32,
    TidyTag_EM = 33,
    TidyTag_EMBED = 34,
    TidyTag_FIELDSET = 35,
    TidyTag_FONT = 36,
    TidyTag_FORM = 37,
    TidyTag_FRAME = 38,
    TidyTag_FRAMESET = 39,
    TidyTag_H1 = 40,
    TidyTag_H2 = 41,
    TidyTag_H3 = 42,
    TidyTag_H4 = 43,
    TidyTag_H5 = 44,
    TidyTag_H6 = 45,
    TidyTag_HEAD = 46,
    TidyTag_HR = 47,
    TidyTag_HTML = 48,
    TidyTag_I = 49,
    TidyTag_IFRAME = 50,
    TidyTag_ILAYER = 51,
    TidyTag_IMG = 52,
    TidyTag_INPUT = 53,
    TidyTag_INS = 54,
    TidyTag_ISINDEX = 55,
    TidyTag_KBD = 56,
    TidyTag_KEYGEN = 57,
    TidyTag_LABEL = 58,
    TidyTag_LAYER = 59,
    TidyTag_LEGEND = 60,
    TidyTag_LI = 61,
    TidyTag_LINK = 62,
    TidyTag_LISTING = 63,
    TidyTag_MAP = 64,
    TidyTag_MATHML = 65,
    TidyTag_MARQUEE = 66,
    TidyTag_MENU = 67,
    TidyTag_META = 68,
    TidyTag_MULTICOL = 69,
    TidyTag_NOBR = 70,
    TidyTag_NOEMBED = 71,
    TidyTag_NOFRAMES = 72,
    TidyTag_NOLAYER = 73,
    TidyTag_NOSAVE = 74,
    TidyTag_NOSCRIPT = 75,
    TidyTag_OBJECT = 76,
    TidyTag_OL = 77,
    TidyTag_OPTGROUP = 78,
    TidyTag_OPTION = 79,
    TidyTag_P = 80,
    TidyTag_PARAM = 81,
    TidyTag_PICTURE = 82,
    TidyTag_PLAINTEXT = 83,
    TidyTag_PRE = 84,
    TidyTag_Q = 85,
    TidyTag_RB = 86,
    TidyTag_RBC = 87,
    TidyTag_RP = 88,
    TidyTag_RT = 89,
    TidyTag_RTC = 90,
    TidyTag_RUBY = 91,
    TidyTag_S = 92,
    TidyTag_SAMP = 93,
    TidyTag_SCRIPT = 94,
    TidyTag_SELECT = 95,
    TidyTag_SERVER = 96,
    TidyTag_SERVLET = 97,
    TidyTag_SMALL = 98,
    TidyTag_SPACER = 99,
    TidyTag_SPAN = 100,
    TidyTag_STRIKE = 101,
    TidyTag_STRONG = 102,
    TidyTag_STYLE = 103,
    TidyTag_SUB = 104,
    TidyTag_SUP = 105,
    TidyTag_SVG = 106,
    TidyTag_TABLE = 107,
    TidyTag_TBODY = 108,
    TidyTag_TD = 109,
    TidyTag_TEXTAREA = 110,
    TidyTag_TFOOT = 111,
    TidyTag_TH = 112,
    TidyTag_THEAD = 113,
    TidyTag_TITLE = 114,
    TidyTag_TR = 115,
    TidyTag_TT = 116,
    TidyTag_U = 117,
    TidyTag_UL = 118,
    TidyTag_VAR = 119,
    TidyTag_WBR = 120,
    TidyTag_XMP = 121,
    TidyTag_NEXTID = 122,
    TidyTag_ARTICLE = 123,
    TidyTag_ASIDE = 124,
    TidyTag_AUDIO = 125,
    TidyTag_BDI = 126,
    TidyTag_CANVAS = 127,
    TidyTag_COMMAND = 128,
    TidyTag_DATALIST = 129,
    TidyTag_DETAILS = 130,
    TidyTag_DIALOG = 131,
    TidyTag_FIGCAPTION = 132,
    TidyTag_FIGURE = 133,
    TidyTag_FOOTER = 134,
    TidyTag_HEADER = 135,
    TidyTag_HGROUP = 136,
    TidyTag_MAIN = 137,
    TidyTag_MARK = 138,
    TidyTag_MENUITEM = 139,
    TidyTag_METER = 140,
    TidyTag_NAV = 141,
    TidyTag_OUTPUT = 142,
    TidyTag_PROGRESS = 143,
    TidyTag_SECTION = 144,
    TidyTag_SOURCE = 145,
    TidyTag_SUMMARY = 146,
    TidyTag_TEMPLATE = 147,
    TidyTag_TIME = 148,
    TidyTag_TRACK = 149,
    TidyTag_VIDEO = 150,
    N_TIDY_TAGS = 151,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum TidyAttrId {
    TidyAttr_UNKNOWN = 0,
    TidyAttr_ABBR = 1,
    TidyAttr_ACCEPT = 2,
    TidyAttr_ACCEPT_CHARSET = 3,
    TidyAttr_ACCESSKEY = 4,
    TidyAttr_ACTION = 5,
    TidyAttr_ADD_DATE = 6,
    TidyAttr_ALIGN = 7,
    TidyAttr_ALINK = 8,
    TidyAttr_ALLOWFULLSCREEN = 9,
    TidyAttr_ALT = 10,
    TidyAttr_ARCHIVE = 11,
    TidyAttr_AXIS = 12,
    TidyAttr_BACKGROUND = 13,
    TidyAttr_BGCOLOR = 14,
    TidyAttr_BGPROPERTIES = 15,
    TidyAttr_BORDER = 16,
    TidyAttr_BORDERCOLOR = 17,
    TidyAttr_BOTTOMMARGIN = 18,
    TidyAttr_CELLPADDING = 19,
    TidyAttr_CELLSPACING = 20,
    TidyAttr_CHAR = 21,
    TidyAttr_CHAROFF = 22,
    TidyAttr_CHARSET = 23,
    TidyAttr_CHECKED = 24,
    TidyAttr_CITE = 25,
    TidyAttr_CLASS = 26,
    TidyAttr_CLASSID = 27,
    TidyAttr_CLEAR = 28,
    TidyAttr_CODE = 29,
    TidyAttr_CODEBASE = 30,
    TidyAttr_CODETYPE = 31,
    TidyAttr_COLOR = 32,
    TidyAttr_COLS = 33,
    TidyAttr_COLSPAN = 34,
    TidyAttr_COMPACT = 35,
    TidyAttr_CONTENT = 36,
    TidyAttr_COORDS = 37,
    TidyAttr_DATA = 38,
    TidyAttr_DATAFLD = 39,
    TidyAttr_DATAFORMATAS = 40,
    TidyAttr_DATAPAGESIZE = 41,
    TidyAttr_DATASRC = 42,
    TidyAttr_DATETIME = 43,
    TidyAttr_DECLARE = 44,
    TidyAttr_DEFER = 45,
    TidyAttr_DIR = 46,
    TidyAttr_DISABLED = 47,
    TidyAttr_ENCODING = 48,
    TidyAttr_ENCTYPE = 49,
    TidyAttr_FACE = 50,
    TidyAttr_FOR = 51,
    TidyAttr_FRAME = 52,
    TidyAttr_FRAMEBORDER = 53,
    TidyAttr_FRAMESPACING = 54,
    TidyAttr_GRIDX = 55,
    TidyAttr_GRIDY = 56,
    TidyAttr_HEADERS = 57,
    TidyAttr_HEIGHT = 58,
    TidyAttr_HREF = 59,
    TidyAttr_HREFLANG = 60,
    TidyAttr_HSPACE = 61,
    TidyAttr_HTTP_EQUIV = 62,
    TidyAttr_ID = 63,
    TidyAttr_ISMAP = 64,
    TidyAttr_ITEMID = 65,
    TidyAttr_ITEMPROP = 66,
    TidyAttr_ITEMREF = 67,
    TidyAttr_ITEMSCOPE = 68,
    TidyAttr_ITEMTYPE = 69,
    TidyAttr_LABEL = 70,
    TidyAttr_LANG = 71,
    TidyAttr_LANGUAGE = 72,
    TidyAttr_LAST_MODIFIED = 73,
    TidyAttr_LAST_VISIT = 74,
    TidyAttr_LEFTMARGIN = 75,
    TidyAttr_LINK = 76,
    TidyAttr_LONGDESC = 77,
    TidyAttr_LOWSRC = 78,
    TidyAttr_MARGINHEIGHT = 79,
    TidyAttr_MARGINWIDTH = 80,
    TidyAttr_MAXLENGTH = 81,
    TidyAttr_MEDIA = 82,
    TidyAttr_METHOD = 83,
    TidyAttr_MULTIPLE = 84,
    TidyAttr_NAME = 85,
    TidyAttr_NOHREF = 86,
    TidyAttr_NORESIZE = 87,
    TidyAttr_NOSHADE = 88,
    TidyAttr_NOWRAP = 89,
    TidyAttr_OBJECT = 90,
    TidyAttr_OnAFTERUPDATE = 91,
    TidyAttr_OnBEFOREUNLOAD = 92,
    TidyAttr_OnBEFOREUPDATE = 93,
    TidyAttr_OnBLUR = 94,
    TidyAttr_OnCHANGE = 95,
    TidyAttr_OnCLICK = 96,
    TidyAttr_OnDATAAVAILABLE = 97,
    TidyAttr_OnDATASETCHANGED = 98,
    TidyAttr_OnDATASETCOMPLETE = 99,
    TidyAttr_OnDBLCLICK = 100,
    TidyAttr_OnERRORUPDATE = 101,
    TidyAttr_OnFOCUS = 102,
    TidyAttr_OnKEYDOWN = 103,
    TidyAttr_OnKEYPRESS = 104,
    TidyAttr_OnKEYUP = 105,
    TidyAttr_OnLOAD = 106,
    TidyAttr_OnMOUSEDOWN = 107,
    TidyAttr_OnMOUSEMOVE = 108,
    TidyAttr_OnMOUSEOUT = 109,
    TidyAttr_OnMOUSEOVER = 110,
    TidyAttr_OnMOUSEUP = 111,
    TidyAttr_OnRESET = 112,
    TidyAttr_OnROWENTER = 113,
    TidyAttr_OnROWEXIT = 114,
    TidyAttr_OnSELECT = 115,
    TidyAttr_OnSUBMIT = 116,
    TidyAttr_OnUNLOAD = 117,
    TidyAttr_PROFILE = 118,
    TidyAttr_PROMPT = 119,
    TidyAttr_RBSPAN = 120,
    TidyAttr_READONLY = 121,
    TidyAttr_REL = 122,
    TidyAttr_REV = 123,
    TidyAttr_RIGHTMARGIN = 124,
    TidyAttr_ROLE = 125,
    TidyAttr_ROWS = 126,
    TidyAttr_ROWSPAN = 127,
    TidyAttr_RULES = 128,
    TidyAttr_SCHEME = 129,
    TidyAttr_SCOPE = 130,
    TidyAttr_SCROLLING = 131,
    TidyAttr_SELECTED = 132,
    TidyAttr_SHAPE = 133,
    TidyAttr_SHOWGRID = 134,
    TidyAttr_SHOWGRIDX = 135,
    TidyAttr_SHOWGRIDY = 136,
    TidyAttr_SIZE = 137,
    TidyAttr_SPAN = 138,
    TidyAttr_SRC = 139,
    TidyAttr_SRCSET = 140,
    TidyAttr_STANDBY = 141,
    TidyAttr_START = 142,
    TidyAttr_STYLE = 143,
    TidyAttr_SUMMARY = 144,
    TidyAttr_TABINDEX = 145,
    TidyAttr_TARGET = 146,
    TidyAttr_TEXT = 147,
    TidyAttr_TITLE = 148,
    TidyAttr_TOPMARGIN = 149,
    TidyAttr_TRANSLATE = 150,
    TidyAttr_TYPE = 151,
    TidyAttr_USEMAP = 152,
    TidyAttr_VALIGN = 153,
    TidyAttr_VALUE = 154,
    TidyAttr_VALUETYPE = 155,
    TidyAttr_VERSION = 156,
    TidyAttr_VLINK = 157,
    TidyAttr_VSPACE = 158,
    TidyAttr_WIDTH = 159,
    TidyAttr_WRAP = 160,
    TidyAttr_XML_LANG = 161,
    TidyAttr_XML_SPACE = 162,
    TidyAttr_XMLNS = 163,
    TidyAttr_EVENT = 164,
    TidyAttr_METHODS = 165,
    TidyAttr_N = 166,
    TidyAttr_SDAFORM = 167,
    TidyAttr_SDAPREF = 168,
    TidyAttr_SDASUFF = 169,
    TidyAttr_URN = 170,
    TidyAttr_ASYNC = 171,
    TidyAttr_AUTOCOMPLETE = 172,
    TidyAttr_AUTOFOCUS = 173,
    TidyAttr_AUTOPLAY = 174,
    TidyAttr_CHALLENGE = 175,
    TidyAttr_CONTENTEDITABLE = 176,
    TidyAttr_CONTEXTMENU = 177,
    TidyAttr_CONTROLS = 178,
    TidyAttr_DEFAULT = 179,
    TidyAttr_DIRNAME = 180,
    TidyAttr_DRAGGABLE = 181,
    TidyAttr_DROPZONE = 182,
    TidyAttr_FORM = 183,
    TidyAttr_FORMACTION = 184,
    TidyAttr_FORMENCTYPE = 185,
    TidyAttr_FORMMETHOD = 186,
    TidyAttr_FORMNOVALIDATE = 187,
    TidyAttr_FORMTARGET = 188,
    TidyAttr_HIDDEN = 189,
    TidyAttr_HIGH = 190,
    TidyAttr_ICON = 191,
    TidyAttr_KEYTYPE = 192,
    TidyAttr_KIND = 193,
    TidyAttr_LIST = 194,
    TidyAttr_LOOP = 195,
    TidyAttr_LOW = 196,
    TidyAttr_MANIFEST = 197,
    TidyAttr_MAX = 198,
    TidyAttr_MEDIAGROUP = 199,
    TidyAttr_MIN = 200,
    TidyAttr_NOVALIDATE = 201,
    TidyAttr_OPEN = 202,
    TidyAttr_OPTIMUM = 203,
    TidyAttr_OnABORT = 204,
    TidyAttr_OnAFTERPRINT = 205,
    TidyAttr_OnBEFOREPRINT = 206,
    TidyAttr_OnCANPLAY = 207,
    TidyAttr_OnCANPLAYTHROUGH = 208,
    TidyAttr_OnCONTEXTMENU = 209,
    TidyAttr_OnCUECHANGE = 210,
    TidyAttr_OnDRAG = 211,
    TidyAttr_OnDRAGEND = 212,
    TidyAttr_OnDRAGENTER = 213,
    TidyAttr_OnDRAGLEAVE = 214,
    TidyAttr_OnDRAGOVER = 215,
    TidyAttr_OnDRAGSTART = 216,
    TidyAttr_OnDROP = 217,
    TidyAttr_OnDURATIONCHANGE = 218,
    TidyAttr_OnEMPTIED = 219,
    TidyAttr_OnENDED = 220,
    TidyAttr_OnERROR = 221,
    TidyAttr_OnHASHCHANGE = 222,
    TidyAttr_OnINPUT = 223,
    TidyAttr_OnINVALID = 224,
    TidyAttr_OnLOADEDDATA = 225,
    TidyAttr_OnLOADEDMETADATA = 226,
    TidyAttr_OnLOADSTART = 227,
    TidyAttr_OnMESSAGE = 228,
    TidyAttr_OnMOUSEWHEEL = 229,
    TidyAttr_OnOFFLINE = 230,
    TidyAttr_OnONLINE = 231,
    TidyAttr_OnPAGEHIDE = 232,
    TidyAttr_OnPAGESHOW = 233,
    TidyAttr_OnPAUSE = 234,
    TidyAttr_OnPLAY = 235,
    TidyAttr_OnPLAYING = 236,
    TidyAttr_OnPOPSTATE = 237,
    TidyAttr_OnPROGRESS = 238,
    TidyAttr_OnRATECHANGE = 239,
    TidyAttr_OnREADYSTATECHANGE = 240,
    TidyAttr_OnREDO = 241,
    TidyAttr_OnRESIZE = 242,
    TidyAttr_OnSCROLL = 243,
    TidyAttr_OnSEEKED = 244,
    TidyAttr_OnSEEKING = 245,
    TidyAttr_OnSHOW = 246,
    TidyAttr_OnSTALLED = 247,
    TidyAttr_OnSTORAGE = 248,
    TidyAttr_OnSUSPEND = 249,
    TidyAttr_OnTIMEUPDATE = 250,
    TidyAttr_OnUNDO = 251,
    TidyAttr_OnVOLUMECHANGE = 252,
    TidyAttr_OnWAITING = 253,
    TidyAttr_PATTERN = 254,
    TidyAttr_PLACEHOLDER = 255,
    TidyAttr_POSTER = 256,
    TidyAttr_PRELOAD = 257,
    TidyAttr_PUBDATE = 258,
    TidyAttr_RADIOGROUP = 259,
    TidyAttr_REQUIRED = 260,
    TidyAttr_REVERSED = 261,
    TidyAttr_SANDBOX = 262,
    TidyAttr_SCOPED = 263,
    TidyAttr_SEAMLESS = 264,
    TidyAttr_SIZES = 265,
    TidyAttr_SPELLCHECK = 266,
    TidyAttr_SRCDOC = 267,
    TidyAttr_SRCLANG = 268,
    TidyAttr_STEP = 269,
    TidyAttr_ARIA_ACTIVEDESCENDANT = 270,
    TidyAttr_ARIA_ATOMIC = 271,
    TidyAttr_ARIA_AUTOCOMPLETE = 272,
    TidyAttr_ARIA_BUSY = 273,
    TidyAttr_ARIA_CHECKED = 274,
    TidyAttr_ARIA_CONTROLS = 275,
    TidyAttr_ARIA_DESCRIBEDBY = 276,
    TidyAttr_ARIA_DISABLED = 277,
    TidyAttr_ARIA_DROPEFFECT = 278,
    TidyAttr_ARIA_EXPANDED = 279,
    TidyAttr_ARIA_FLOWTO = 280,
    TidyAttr_ARIA_GRABBED = 281,
    TidyAttr_ARIA_HASPOPUP = 282,
    TidyAttr_ARIA_HIDDEN = 283,
    TidyAttr_ARIA_INVALID = 284,
    TidyAttr_ARIA_LABEL = 285,
    TidyAttr_ARIA_LABELLEDBY = 286,
    TidyAttr_ARIA_LEVEL = 287,
    TidyAttr_ARIA_LIVE = 288,
    TidyAttr_ARIA_MULTILINE = 289,
    TidyAttr_ARIA_MULTISELECTABLE = 290,
    TidyAttr_ARIA_ORIENTATION = 291,
    TidyAttr_ARIA_OWNS = 292,
    TidyAttr_ARIA_POSINSET = 293,
    TidyAttr_ARIA_PRESSED = 294,
    TidyAttr_ARIA_READONLY = 295,
    TidyAttr_ARIA_RELEVANT = 296,
    TidyAttr_ARIA_REQUIRED = 297,
    TidyAttr_ARIA_SELECTED = 298,
    TidyAttr_ARIA_SETSIZE = 299,
    TidyAttr_ARIA_SORT = 300,
    TidyAttr_ARIA_VALUEMAX = 301,
    TidyAttr_ARIA_VALUEMIN = 302,
    TidyAttr_ARIA_VALUENOW = 303,
    TidyAttr_ARIA_VALUETEXT = 304,
    TidyAttr_X = 305,
    TidyAttr_Y = 306,
    TidyAttr_VIEWBOX = 307,
    TidyAttr_PRESERVEASPECTRATIO = 308,
    TidyAttr_ZOOMANDPAN = 309,
    TidyAttr_BASEPROFILE = 310,
    TidyAttr_CONTENTSCRIPTTYPE = 311,
    TidyAttr_CONTENTSTYLETYPE = 312,
    TidyAttr_DISPLAY = 313,
    TidyAttr_ABOUT = 314,
    TidyAttr_DATATYPE = 315,
    TidyAttr_INLIST = 316,
    TidyAttr_PREFIX = 317,
    TidyAttr_PROPERTY = 318,
    TidyAttr_RESOURCE = 319,
    TidyAttr_TYPEOF = 320,
    TidyAttr_VOCAB = 321,
    N_TIDY_ATTRIBS = 322,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyDoc {
    pub _opaque: ::std::os::raw::c_int,
}
pub type TidyDoc = *const _TidyDoc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
 pub struct _TidyOption {
        pub TidyOptionId: ::std::os::raw::c_int,
        pub TidyConfigCategory: TidyConfigCategory,
        pub name: ctmbstr,
    }
pub type TidyOption = *const _TidyOption;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyNode {
    pub _opaque: ::std::os::raw::c_int,
}
pub type TidyNode = *const _TidyNode;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyAttr {
    pub _opaque: ::std::os::raw::c_int,
}
pub type TidyAttr = *const _TidyAttr;
pub type TidyBuffer = _TidyBuffer;
pub type TidyAllocatorVtbl = _TidyAllocatorVtbl;
pub type TidyAllocator = _TidyAllocator;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyAllocatorVtbl {
    pub alloc: ::std::option::Option<
        unsafe extern "C" fn(
            self_: *mut TidyAllocator,
            nBytes: size_t,
        ) -> *mut ::std::os::raw::c_void,
    >,
    pub realloc: ::std::option::Option<
        unsafe extern "C" fn(
            self_: *mut TidyAllocator,
            block: *mut ::std::os::raw::c_void,
            nBytes: size_t,
        ) -> *mut ::std::os::raw::c_void,
    >,
    pub free: ::std::option::Option<
        unsafe extern "C" fn(self_: *mut TidyAllocator, block: *mut ::std::os::raw::c_void),
    >,
    pub panic: ::std::option::Option<unsafe extern "C" fn(self_: *mut TidyAllocator, msg: ctmbstr)>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyAllocator {
    pub vtbl: *const TidyAllocatorVtbl,
}
pub type TidyMalloc =
    ::std::option::Option<unsafe extern "C" fn(len: size_t) -> *mut ::std::os::raw::c_void>;
pub type TidyRealloc = ::std::option::Option<
    unsafe extern "C" fn(
        buf: *mut ::std::os::raw::c_void,
        len: size_t,
    ) -> *mut ::std::os::raw::c_void,
>;
pub type TidyFree = ::std::option::Option<unsafe extern "C" fn(buf: *mut ::std::os::raw::c_void)>;
pub type TidyPanic = ::std::option::Option<unsafe extern "C" fn(mssg: ctmbstr)>;
extern "C" {
    pub fn tidySetMallocCall(fmalloc: TidyMalloc) -> Bool;
}
extern "C" {
    pub fn tidySetReallocCall(frealloc: TidyRealloc) -> Bool;
}
extern "C" {
    pub fn tidySetFreeCall(ffree: TidyFree) -> Bool;
}
extern "C" {
    pub fn tidySetPanicCall(fpanic: TidyPanic) -> Bool;
}
extern "C" {
    pub fn tidyCreate() -> TidyDoc;
}
extern "C" {
    pub fn tidyCreateWithAllocator(allocator: *mut TidyAllocator) -> TidyDoc;
}
extern "C" {
    pub fn tidyRelease(tdoc: TidyDoc);
}
extern "C" {
    pub fn tidySetAppData(tdoc: TidyDoc, appData: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn tidyGetAppData(tdoc: TidyDoc) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn tidyReleaseDate() -> ctmbstr;
}
extern "C" {
    pub fn tidyLibraryVersion() -> ctmbstr;
}
extern "C" {
    pub fn tidyStatus(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyDetectedHtmlVersion(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyDetectedXhtml(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyDetectedGenericXml(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyErrorCount(tdoc: TidyDoc) -> uint;
}
extern "C" {
    pub fn tidyWarningCount(tdoc: TidyDoc) -> uint;
}
extern "C" {
    pub fn tidyAccessWarningCount(tdoc: TidyDoc) -> uint;
}
extern "C" {
    pub fn tidyConfigErrorCount(tdoc: TidyDoc) -> uint;
}
extern "C" {
    pub fn tidyLoadConfig(tdoc: TidyDoc, configFile: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyLoadConfigEnc(
        tdoc: TidyDoc,
        configFile: ctmbstr,
        charenc: ctmbstr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyFileExists(tdoc: TidyDoc, filename: ctmbstr) -> Bool;
}
extern "C" {
    pub fn tidySetCharEncoding(tdoc: TidyDoc, encnam: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySetInCharEncoding(tdoc: TidyDoc, encnam: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySetOutCharEncoding(tdoc: TidyDoc, encnam: ctmbstr) -> ::std::os::raw::c_int;
}
pub type TidyOptCallback =
    ::std::option::Option<unsafe extern "C" fn(option: ctmbstr, value: ctmbstr) -> Bool>;
extern "C" {
    pub fn tidySetOptionCallback(tdoc: TidyDoc, pOptCallback: TidyOptCallback) -> Bool;
}
extern "C" {
    pub fn tidyOptGetIdForName(optnam: ctmbstr) -> TidyOptionId;
}
extern "C" {
    pub fn tidyGetOptionList(tdoc: TidyDoc) -> TidyIterator;
}
extern "C" {
    pub fn tidyGetNextOption(tdoc: TidyDoc, pos: *mut TidyIterator) -> TidyOption;
}
extern "C" {
    pub fn tidyGetOption(tdoc: TidyDoc, optId: TidyOptionId) -> TidyOption;
}
extern "C" {
    pub fn tidyGetOptionByName(tdoc: TidyDoc, optnam: ctmbstr) -> TidyOption;
}
extern "C" {
    pub fn tidyOptGetId(opt: TidyOption) -> TidyOptionId;
}
extern "C" {
    pub fn tidyOptGetName(opt: TidyOption) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetType(opt: TidyOption) -> TidyOptionType;
}
extern "C" {
    pub fn tidyOptIsReadOnly(opt: TidyOption) -> Bool;
}
extern "C" {
    pub fn tidyOptGetCategory(opt: TidyOption) -> TidyConfigCategory;
}
extern "C" {
    pub fn tidyOptGetDefault(opt: TidyOption) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetDefaultInt(opt: TidyOption) -> ulong;
}
extern "C" {
    pub fn tidyOptGetDefaultBool(opt: TidyOption) -> Bool;
}
extern "C" {
    pub fn tidyOptGetPickList(opt: TidyOption) -> TidyIterator;
}
extern "C" {
    pub fn tidyOptGetNextPick(opt: TidyOption, pos: *mut TidyIterator) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetValue(tdoc: TidyDoc, optId: TidyOptionId) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptSetValue(tdoc: TidyDoc, optId: TidyOptionId, val: ctmbstr) -> Bool;
}
extern "C" {
    pub fn tidyOptParseValue(tdoc: TidyDoc, optnam: ctmbstr, val: ctmbstr) -> Bool;
}
extern "C" {
    pub fn tidyOptGetInt(tdoc: TidyDoc, optId: TidyOptionId) -> ulong;
}
extern "C" {
    pub fn tidyOptSetInt(tdoc: TidyDoc, optId: TidyOptionId, val: ulong) -> Bool;
}
extern "C" {
    pub fn tidyOptGetBool(tdoc: TidyDoc, optId: TidyOptionId) -> Bool;
}
extern "C" {
    pub fn tidyOptSetBool(tdoc: TidyDoc, optId: TidyOptionId, val: Bool) -> Bool;
}
extern "C" {
    pub fn tidyOptResetToDefault(tdoc: TidyDoc, opt: TidyOptionId) -> Bool;
}
extern "C" {
    pub fn tidyOptResetAllToDefault(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyOptSnapshot(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyOptResetToSnapshot(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyOptDiffThanDefault(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyOptDiffThanSnapshot(tdoc: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyOptCopyConfig(tdocTo: TidyDoc, tdocFrom: TidyDoc) -> Bool;
}
extern "C" {
    pub fn tidyOptGetEncName(tdoc: TidyDoc, optId: TidyOptionId) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetCurrPick(tdoc: TidyDoc, optId: TidyOptionId) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetDeclTagList(tdoc: TidyDoc) -> TidyIterator;
}
extern "C" {
    pub fn tidyOptGetNextDeclTag(
        tdoc: TidyDoc,
        optId: TidyOptionId,
        iter: *mut TidyIterator,
    ) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetDoc(tdoc: TidyDoc, opt: TidyOption) -> ctmbstr;
}
extern "C" {
    pub fn tidyOptGetDocLinksList(tdoc: TidyDoc, opt: TidyOption) -> TidyIterator;
}
extern "C" {
    pub fn tidyOptGetNextDocLinks(tdoc: TidyDoc, pos: *mut TidyIterator) -> TidyOption;
}
pub type TidyGetByteFunc = ::std::option::Option<
    unsafe extern "C" fn(sourceData: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int,
>;
pub type TidyUngetByteFunc =
    ::std::option::Option<unsafe extern "C" fn(sourceData: *mut ::std::os::raw::c_void, bt: byte)>;
pub type TidyEOFFunc =
    ::std::option::Option<unsafe extern "C" fn(sourceData: *mut ::std::os::raw::c_void) -> Bool>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyInputSource {
    pub sourceData: *mut ::std::os::raw::c_void,
    pub getByte: TidyGetByteFunc,
    pub ungetByte: TidyUngetByteFunc,
    pub eof: TidyEOFFunc,
}
pub type TidyInputSource = _TidyInputSource;
extern "C" {
    pub fn tidyInitSource(
        source: *mut TidyInputSource,
        srcData: *mut ::std::os::raw::c_void,
        gbFunc: TidyGetByteFunc,
        ugbFunc: TidyUngetByteFunc,
        endFunc: TidyEOFFunc,
    ) -> Bool;
}
extern "C" {
    pub fn tidyGetByte(source: *mut TidyInputSource) -> uint;
}
extern "C" {
    pub fn tidyUngetByte(source: *mut TidyInputSource, byteValue: uint);
}
extern "C" {
    pub fn tidyIsEOF(source: *mut TidyInputSource) -> Bool;
}
pub type TidyPutByteFunc =
    ::std::option::Option<unsafe extern "C" fn(sinkData: *mut ::std::os::raw::c_void, bt: byte)>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyOutputSink {
    pub sinkData: *mut ::std::os::raw::c_void,
    pub putByte: TidyPutByteFunc,
}
pub type TidyOutputSink = _TidyOutputSink;
extern "C" {
    pub fn tidyInitSink(
        sink: *mut TidyOutputSink,
        snkData: *mut ::std::os::raw::c_void,
        pbFunc: TidyPutByteFunc,
    ) -> Bool;
}
extern "C" {
    pub fn tidyPutByte(sink: *mut TidyOutputSink, byteValue: uint);
}
pub type TidyReportFilter = ::std::option::Option<
    unsafe extern "C" fn(
        tdoc: TidyDoc,
        lvl: TidyReportLevel,
        line: uint,
        col: uint,
        mssg: ctmbstr,
    ) -> Bool,
>;
pub type TidyReportFilter2 = ::std::option::Option<
    unsafe extern "C" fn(
        tdoc: TidyDoc,
        lvl: TidyReportLevel,
        line: uint,
        col: uint,
        mssg: ctmbstr,
        args: *mut __va_list_tag,
    ) -> Bool,
>;
pub type TidyReportFilter3 = ::std::option::Option<
    unsafe extern "C" fn(
        tdoc: TidyDoc,
        lvl: TidyReportLevel,
        line: uint,
        col: uint,
        code: ctmbstr,
        args: *mut __va_list_tag,
    ) -> Bool,
>;
extern "C" {
    pub fn tidySetReportFilter(tdoc: TidyDoc, filtCallback: TidyReportFilter) -> Bool;
}
extern "C" {
    pub fn tidySetReportFilter2(tdoc: TidyDoc, filtCallback: TidyReportFilter2) -> Bool;
}
extern "C" {
    pub fn tidySetReportFilter3(tdoc: TidyDoc, filtCallback: TidyReportFilter3) -> Bool;
}
extern "C" {
    pub fn tidySetErrorFile(tdoc: TidyDoc, errfilnam: ctmbstr) -> *mut FILE;
}
extern "C" {
    pub fn tidySetErrorBuffer(tdoc: TidyDoc, errbuf: *mut TidyBuffer) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySetErrorSink(tdoc: TidyDoc, sink: *mut TidyOutputSink) -> ::std::os::raw::c_int;
}
pub type TidyPPProgress = ::std::option::Option<
    unsafe extern "C" fn(tdoc: TidyDoc, line: uint, col: uint, destLine: uint),
>;
extern "C" {
    pub fn tidySetPrettyPrinterCallback(tdoc: TidyDoc, callback: TidyPPProgress) -> Bool;
}
extern "C" {
    pub fn tidyParseFile(tdoc: TidyDoc, filename: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyParseStdin(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyParseString(tdoc: TidyDoc, content: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyParseBuffer(tdoc: TidyDoc, buf: *mut TidyBuffer) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyParseSource(tdoc: TidyDoc, source: *mut TidyInputSource) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyCleanAndRepair(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyRunDiagnostics(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyReportDoctype(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySaveFile(tdoc: TidyDoc, filename: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySaveStdout(tdoc: TidyDoc) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySaveBuffer(tdoc: TidyDoc, buf: *mut TidyBuffer) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySaveString(
        tdoc: TidyDoc,
        buffer: tmbstr,
        buflen: *mut uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidySaveSink(tdoc: TidyDoc, sink: *mut TidyOutputSink) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyOptSaveFile(tdoc: TidyDoc, cfgfil: ctmbstr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyOptSaveSink(tdoc: TidyDoc, sink: *mut TidyOutputSink) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyErrorSummary(tdoc: TidyDoc);
}
extern "C" {
    pub fn tidyGeneralInfo(tdoc: TidyDoc);
}
extern "C" {
    pub fn tidyGetRoot(tdoc: TidyDoc) -> TidyNode;
}
extern "C" {
    pub fn tidyGetHtml(tdoc: TidyDoc) -> TidyNode;
}
extern "C" {
    pub fn tidyGetHead(tdoc: TidyDoc) -> TidyNode;
}
extern "C" {
    pub fn tidyGetBody(tdoc: TidyDoc) -> TidyNode;
}
extern "C" {
    pub fn tidyDiscardElement(tdoc: TidyDoc, tnod: TidyNode) -> TidyNode;
}
extern "C" {
    pub fn tidyGetParent(tnod: TidyNode) -> TidyNode;
}
extern "C" {
    pub fn tidyGetChild(tnod: TidyNode) -> TidyNode;
}
extern "C" {
    pub fn tidyGetNext(tnod: TidyNode) -> TidyNode;
}
extern "C" {
    pub fn tidyGetPrev(tnod: TidyNode) -> TidyNode;
}
extern "C" {
    pub fn tidyAttrFirst(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrNext(tattr: TidyAttr) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrName(tattr: TidyAttr) -> ctmbstr;
}
extern "C" {
    pub fn tidyAttrValue(tattr: TidyAttr) -> ctmbstr;
}
extern "C" {
    pub fn tidyAttrDiscard(itdoc: TidyDoc, tnod: TidyNode, tattr: TidyAttr);
}
extern "C" {
    pub fn tidyNodeGetType(tnod: TidyNode) -> TidyNodeType;
}
extern "C" {
    pub fn tidyNodeGetName(tnod: TidyNode) -> ctmbstr;
}
extern "C" {
    pub fn tidyNodeIsText(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsProp(tdoc: TidyDoc, tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsHeader(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeHasText(tdoc: TidyDoc, tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeGetText(tdoc: TidyDoc, tnod: TidyNode, buf: *mut TidyBuffer) -> Bool;
}
extern "C" {
    pub fn tidyNodeGetValue(tdoc: TidyDoc, tnod: TidyNode, buf: *mut TidyBuffer) -> Bool;
}
extern "C" {
    pub fn tidyNodeGetId(tnod: TidyNode) -> TidyTagId;
}
extern "C" {
    pub fn tidyNodeLine(tnod: TidyNode) -> uint;
}
extern "C" {
    pub fn tidyNodeColumn(tnod: TidyNode) -> uint;
}
extern "C" {
    pub fn tidyNodeIsHTML(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsHEAD(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsTITLE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBASE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsMETA(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBODY(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsFRAMESET(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsFRAME(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsIFRAME(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsNOFRAMES(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsHR(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsH1(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsH2(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsPRE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsLISTING(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsP(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsUL(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsOL(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsDL(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsDIR(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsLI(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsDT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsDD(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsTABLE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsCAPTION(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsTD(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsTH(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsTR(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsCOL(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsCOLGROUP(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBR(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsA(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsLINK(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsB(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsI(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSTRONG(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsEM(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBIG(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSMALL(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsPARAM(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsOPTION(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsOPTGROUP(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsIMG(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsMAP(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsAREA(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsNOBR(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsWBR(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsFONT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsLAYER(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSPACER(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsCENTER(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSTYLE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSCRIPT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsNOSCRIPT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsFORM(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsTEXTAREA(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBLOCKQUOTE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsAPPLET(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsOBJECT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsDIV(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSPAN(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsINPUT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsQ(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsLABEL(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsH3(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsH4(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsH5(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsH6(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsADDRESS(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsXMP(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSELECT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBLINK(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsMARQUEE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsEMBED(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsBASEFONT(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsISINDEX(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsS(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsSTRIKE(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsU(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsMENU(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyNodeIsDATALIST(tnod: TidyNode) -> Bool;
}
extern "C" {
    pub fn tidyAttrGetId(tattr: TidyAttr) -> TidyAttrId;
}
extern "C" {
    pub fn tidyAttrIsEvent(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsProp(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsHREF(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsSRC(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsID(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsNAME(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsSUMMARY(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsALT(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsLONGDESC(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsUSEMAP(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsISMAP(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsLANGUAGE(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsTYPE(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsVALUE(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsCONTENT(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsTITLE(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsXMLNS(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsDATAFLD(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsWIDTH(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsHEIGHT(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsFOR(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsSELECTED(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsCHECKED(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsLANG(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsTARGET(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsHTTP_EQUIV(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsREL(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnMOUSEMOVE(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnMOUSEDOWN(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnMOUSEUP(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnCLICK(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnMOUSEOVER(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnMOUSEOUT(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnKEYDOWN(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnKEYUP(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnKEYPRESS(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnFOCUS(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsOnBLUR(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsBGCOLOR(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsLINK(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsALINK(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsVLINK(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsTEXT(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsSTYLE(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsABBR(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsCOLSPAN(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrIsROWSPAN(tattr: TidyAttr) -> Bool;
}
extern "C" {
    pub fn tidyAttrGetById(tnod: TidyNode, attId: TidyAttrId) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetHREF(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetSRC(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetID(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetNAME(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetSUMMARY(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetALT(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetLONGDESC(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetUSEMAP(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetISMAP(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetLANGUAGE(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetTYPE(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetVALUE(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetCONTENT(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetTITLE(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetXMLNS(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetDATAFLD(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetWIDTH(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetHEIGHT(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetFOR(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetSELECTED(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetCHECKED(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetLANG(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetTARGET(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetHTTP_EQUIV(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetREL(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnMOUSEMOVE(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnMOUSEDOWN(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnMOUSEUP(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnCLICK(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnMOUSEOVER(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnMOUSEOUT(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnKEYDOWN(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnKEYUP(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnKEYPRESS(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnFOCUS(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetOnBLUR(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetBGCOLOR(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetLINK(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetALINK(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetVLINK(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetTEXT(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetSTYLE(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetABBR(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetCOLSPAN(tnod: TidyNode) -> TidyAttr;
}
extern "C" {
    pub fn tidyAttrGetROWSPAN(tnod: TidyNode) -> TidyAttr;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _TidyBuffer {
    pub allocator: *mut TidyAllocator,
    pub bp: *mut byte,
    pub size: uint,
    pub allocated: uint,
    pub next: uint,
}
extern "C" {
    pub fn tidyBufInit(buf: *mut TidyBuffer);
}
extern "C" {
    pub fn tidyBufInitWithAllocator(buf: *mut TidyBuffer, allocator: *mut TidyAllocator);
}
extern "C" {
    pub fn tidyBufAlloc(buf: *mut TidyBuffer, allocSize: uint);
}
extern "C" {
    pub fn tidyBufAllocWithAllocator(
        buf: *mut TidyBuffer,
        allocator: *mut TidyAllocator,
        allocSize: uint,
    );
}
extern "C" {
    pub fn tidyBufCheckAlloc(buf: *mut TidyBuffer, allocSize: uint, chunkSize: uint);
}
extern "C" {
    pub fn tidyBufFree(buf: *mut TidyBuffer);
}
extern "C" {
    pub fn tidyBufClear(buf: *mut TidyBuffer);
}
extern "C" {
    pub fn tidyBufAttach(buf: *mut TidyBuffer, bp: *mut byte, size: uint);
}
extern "C" {
    pub fn tidyBufDetach(buf: *mut TidyBuffer);
}
extern "C" {
    pub fn tidyBufAppend(buf: *mut TidyBuffer, vp: *mut ::std::os::raw::c_void, size: uint);
}
extern "C" {
    pub fn tidyBufPutByte(buf: *mut TidyBuffer, bv: byte);
}
extern "C" {
    pub fn tidyBufPopByte(buf: *mut TidyBuffer) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyBufGetByte(buf: *mut TidyBuffer) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn tidyBufEndOfInput(buf: *mut TidyBuffer) -> Bool;
}
extern "C" {
    pub fn tidyBufUngetByte(buf: *mut TidyBuffer, bv: byte);
}
extern "C" {
    pub fn tidyInitInputBuffer(inp: *mut TidyInputSource, buf: *mut TidyBuffer);
}
extern "C" {
    pub fn tidyInitOutputBuffer(outp: *mut TidyOutputSink, buf: *mut TidyBuffer);
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
